{"version":3,"sources":["containers/redux-ui.js"],"names":["UI_KEY","Option","antd_es_select__WEBPACK_IMPORTED_MODULE_25__","progress","makeProgress","progressSelector","makeProgressSelector","assign","makeAssign","assignSelector","makeAssignSelector","toggle","makeToggle","toggleSelector","makeToggleSelector","ProgressExample","connect","onIncrease","_this","props","dispatch","increase","onDecrease","decrease","onReset","reset","react__WEBPACK_IMPORTED_MODULE_27___default","a","createElement","antd_es_row__WEBPACK_IMPORTED_MODULE_13__","type","align","antd_es_col__WEBPACK_IMPORTED_MODULE_19__","span","offset","antd_es_progress__WEBPACK_IMPORTED_MODULE_17__","percent","this","pos","antd_es_button__WEBPACK_IMPORTED_MODULE_15__","Group","icon","_ant_design_icons__WEBPACK_IMPORTED_MODULE_30__","onClick","_ant_design_icons__WEBPACK_IMPORTED_MODULE_31__","PureComponent","AssignExample","state","vals","onValuesChange","changedValues","allValues","console","log","_this2","antd_es_form__WEBPACK_IMPORTED_MODULE_11__","Object","labelCol","wrapperCol","initialValues","some-number","Item","name","label","rules","required","message","hasFeedback","placeholder","value","mode","antd_es_input_number__WEBPACK_IMPORTED_MODULE_9__","min","max","valuePropName","antd_es_switch__WEBPACK_IMPORTED_MODULE_7__","antd_es_slider__WEBPACK_IMPORTED_MODULE_5__","marks","0","20","40","60","80","100","antd_es_radio__WEBPACK_IMPORTED_MODULE_3__","keys","map","k","val","lodash_isNil__WEBPACK_IMPORTED_MODULE_26___default","key","style","padding","toString","Component","ToggleExample","onChange","_this3","onOpen","onClose","checked","disabled","ReduxUi","withBreadCrumb","_components_layout_container__WEBPACK_IMPORTED_MODULE_33__","_components_layout_jumbotron__WEBPACK_IMPORTED_MODULE_34__","antd_es_divider__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/7.da18561b.chunk.js","sourcesContent":["/**\n * Example redux-ui example\n */\n\nimport React, { Component, PureComponent } from \"react\";\nimport { isNil } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  Switch,\n  Row,\n  Col,\n  Button,\n  Form,\n  Select,\n  InputNumber,\n  Slider,\n  Radio,\n  Divider,\n  Progress,\n} from \"antd\";\nimport {\n  makeProgress,\n  makeProgressSelector,\n  makeAssign,\n  makeAssignSelector,\n  makeToggle,\n  makeToggleSelector,\n} from \"@36node/redux\";\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\";\n\nimport withBreadCrumb from \"../components/withBreadCrumb\";\nimport Container from \"../components/layout/container\";\nimport Jumbotron from \"../components/layout/jumbotron\";\n\nconst UI_KEY = \"reduxUI\";\nconst Option = Select.Option;\n\nconst progress = makeProgress(UI_KEY);\nconst progressSelector = makeProgressSelector(UI_KEY);\nconst assign = makeAssign(UI_KEY);\nconst assignSelector = makeAssignSelector(UI_KEY);\nconst toggle = makeToggle(UI_KEY);\nconst toggleSelector = makeToggleSelector(UI_KEY);\n\n@connect(progressSelector)\nclass ProgressExample extends PureComponent {\n  onIncrease = () => this.props.dispatch(progress.increase(5));\n  onDecrease = () => this.props.dispatch(progress.decrease(5));\n  onReset = () => this.props.dispatch(progress.reset());\n\n  render() {\n    return (\n      <Row type=\"flex\" align=\"middle\">\n        <Col span={2}>Progress Example:</Col>\n        <Col span={5} offset={1}>\n          <Progress type=\"circle\" percent={this.props.pos} />\n        </Col>\n\n        <Col span={16}>\n          <Button.Group>\n            <Button\n              icon={<PlusOutlined />}\n              type=\"primary\"\n              onClick={this.onIncrease}\n            >\n              Increase\n            </Button>\n            <Button icon={<MinusOutlined />} onClick={this.onDecrease}>\n              Decrease\n            </Button>\n            <Button type=\"danger\" onClick={this.onReset}>\n              Reset\n            </Button>\n          </Button.Group>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n@connect(state => ({ vals: assignSelector(state) }))\nclass AssignExample extends Component {\n  onValuesChange = (changedValues, allValues) => {\n    console.log(changedValues);\n    this.props.dispatch(assign(allValues));\n  };\n\n  render() {\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n\n    const { vals } = this.props;\n\n    return (\n      <Row type=\"flex\" align=\"middle\">\n        <Col span={2}>Assign Example:</Col>\n        <Col span={8} offset={1}>\n          <Form\n            {...formItemLayout}\n            initialValues={{ \"some-number\": 3 }}\n            onValuesChange={this.onValuesChange}\n          >\n            <Form.Item\n              name=\"select\"\n              label=\"Select\"\n              rules={[\n                { required: true, message: \"Please select your country!\" },\n              ]}\n              hasFeedback\n            >\n              <Select placeholder=\"Please select a country\">\n                <Option value=\"china\">China</Option>\n                <Option value=\"usa\">U.S.A</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"select-multiple\"\n              label=\"Select[multiple]\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please select your favourite colors!\",\n                  type: \"array\",\n                },\n              ]}\n            >\n              <Select\n                mode=\"multiple\"\n                placeholder=\"Please select favourite colors\"\n              >\n                <Option value=\"red\">Red</Option>\n                <Option value=\"green\">Green</Option>\n                <Option value=\"blue\">Blue</Option>\n              </Select>\n            </Form.Item>\n\n            <Form.Item name=\"some-number\" label=\"SomeNumber\">\n              <InputNumber min={1} max={10} />\n            </Form.Item>\n\n            <Form.Item name=\"switch\" label=\"Switch\" valuePropName=\"checked\">\n              <Switch />\n            </Form.Item>\n\n            <Form.Item name=\"slider\" label=\"Slider\">\n              <Slider\n                marks={{\n                  0: \"A\",\n                  20: \"B\",\n                  40: \"C\",\n                  60: \"D\",\n                  80: \"E\",\n                  100: \"F\",\n                }}\n              />\n            </Form.Item>\n\n            <Form.Item name=\"radio-group\" label=\"Radio.Group\">\n              <Radio.Group>\n                <Radio value=\"a\">item 1</Radio>\n                <Radio value=\"b\">item 2</Radio>\n                <Radio value=\"c\">item 3</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col offset={1} span={8}>\n          {Object.keys(vals).map(k => {\n            const val = isNil(vals[k]) ? \"\" : vals[k];\n\n            return (\n              <Row key={k} style={{ padding: 20 }}>\n                <Col span={10}>{k}:</Col>\n                <Col span={14}>{val.toString()}</Col>\n              </Row>\n            );\n          })}\n        </Col>\n      </Row>\n    );\n  }\n}\n\n@connect(state => ({\n  value: toggleSelector(state),\n}))\nclass ToggleExample extends Component {\n  onChange = () => this.props.dispatch(toggle());\n  onOpen = () => this.props.dispatch(toggle(true));\n  onClose = () => this.props.dispatch(toggle(false));\n\n  render() {\n    const { value } = this.props;\n\n    return (\n      <Row type=\"flex\" align=\"middle\">\n        <Col span={2}>Toggle example:</Col>\n        <Col span={3} offset={1}>\n          <Switch checked={value} onChange={this.onChange} />\n        </Col>\n        <Col span={18}>\n          <Button.Group>\n            <Button disabled={value} onClick={this.onOpen} type=\"primary\">\n              ON\n            </Button>\n            <Button disabled={!value} onClick={this.onClose}>\n              OFF\n            </Button>\n          </Button.Group>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n@withBreadCrumb(\"UI-Example\", \"UI\")\nexport default class ReduxUi extends Component {\n  render() {\n    return (\n      <Container>\n        <Jumbotron> Redux ui. </Jumbotron>\n        <Divider />\n        <ToggleExample />\n        <Divider />\n        <AssignExample />\n        <Divider />\n        <ProgressExample />\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}